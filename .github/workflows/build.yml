name: build
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Prepare repository
        run: git checkout "${GITHUB_REF:11}"

      - uses: syncromatics/gogitver-action@v0.0.3
        id: gogitver

      - name: test
        run: make test
        env:
          IMAGE: ${{github.repository}}
          VERSION: ${{ steps.gogitver.outputs.version }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  pre-release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref != 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
        with:
          ref: ${{ github.ref }}

      - name: Prepare repository
        run: git checkout "${GITHUB_REF:11}"

      - uses: syncromatics/gogitver-action@v0.0.3
        id: gogitver

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.gogitver.outputs.version }}
          release_name: Release ${{ steps.gogitver.outputs.version }}
          draft: false
          prerelease: true

      - uses: actions/checkout@v1

      - name: Build release artifacts and ship Docker image
        run: make package ship
        env:
          IMAGE: ${{github.repository}}
          VERSION: ${{ steps.gogitver.outputs.version }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux.tar.gz
          asset_name: linux.tar.gz
          asset_content_type: application/gzip

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows.zip
          asset_name: windows.zip
          asset_content_type: application/zip

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/arm.tar.gz
          asset_name: arm.tar.gz
          asset_content_type: application/gzip

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/darwin.tar.gz
          asset_name: darwin.tar.gz
          asset_content_type: application/gzip

  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
        with:
          ref: ${{ github.ref }}

      - name: Prepare repository
        run: git checkout "${GITHUB_REF:11}"

      - uses: syncromatics/gogitver-action@v0.0.3
        id: gogitver

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.gogitver.outputs.version }}
          release_name: Release ${{ steps.gogitver.outputs.version }}
          draft: false
          prerelease: false

      - uses: actions/checkout@v1

      - name: Build release artifacts and ship Docker image
        run: make package ship
        env:
          IMAGE: ${{github.repository}}
          VERSION: ${{ steps.gogitver.outputs.version }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux.tar.gz
          asset_name: linux.tar.gz
          asset_content_type: application/gzip

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows.zip
          asset_name: windows.zip
          asset_content_type: application/zip

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/arm.tar.gz
          asset_name: arm.tar.gz
          asset_content_type: application/gzip

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/darwin.tar.gz
          asset_name: darwin.tar.gz
          asset_content_type: application/gzip
